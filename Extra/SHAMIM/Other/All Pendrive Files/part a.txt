>> % Define the text message
textMessage = 'Data Comm';

% Convert text to binary
binaryData = dec2bin(char(textMessage), 8); % Assuming 8-bit ASCII encoding

% Convert binary data to numerical array
binaryDataNumeric = double(binaryData(:)' - '0');

% QASK modulation parameters
A = 1; % Amplitude
fc = 1000; % Carrier frequency
fs = 10000; % Sampling frequency
t = 0:1/fs:length(textMessage)-1/fs; % Time vector

% QASK modulation
digitalSignal = zeros(size(t));
for i = 1:length(textMessage)
    if binaryData(i) == '1'
        digitalSignal((i-1)*fs+1:i*fs) = A * cos(2*pi*fc*t((i-1)*fs+1:i*fs));
    else
        digitalSignal((i-1)*fs+1:i*fs) = -A * cos(2*pi*fc*t((i-1)*fs+1:i*fs));
    end
end

% Analog signal (add some noise for realism)
analogSignal = awgn(digitalSignal, 10); % SNR of 10 dB

% Plot the results
figure;
subplot(3,1,1);
stem(1:numel(binaryDataNumeric), binaryDataNumeric, 'LineWidth', 2); % Fix here
title('Binary Data');
xlabel('Bit Index');
ylabel('Binary Value');

subplot(3,1,2);
plot(t, digitalSignal, 'LineWidth', 2);
title('Digital Signal');
xlabel('Time (s)');
ylabel('Amplitude');

subplot(3,1,3);
plot(t, analogSignal, 'LineWidth', 2);
title('Analog Signal with Noise');
xlabel('Time (s)');
ylabel('Amplitude');
>> 